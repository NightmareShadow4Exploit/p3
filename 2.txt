its fetching images with title , description in a list

I want them to clickable 
when  I click on any image :
everything should disappear 
and fetch the title timestamp image , filepaths((2) downloadable) description

like in example:
 {
      "subcategory": "Imam hasan",
      "title": "Mujtaba",
      "description": "My name is Mujtaba , its the name of Imam hasan\nit means the one who is born for a special mission...",
      "imagePath": "Images/img19.jpg",
      "filePaths": [
        "Files/img19.jpg",
        "Files/img19.jpg"
      ],
      "timestamp": "11/16/2024, 12:43:41 PM"
    }
each files contains similar to these
it will fetch all the data in a list 
if I click on a image title , description etc of a item in a list then function should be above work









// Your GitHub token (replace with your actual token)
const token1 = "ghp_KVvNORy";
const token2 = "aRwNAiuKb6pIxUcOCKL";
const token3 = "u9r81lIpjo";
const token = `${token1}${token2}${token3}`; // Full GitHub token

const repo = "NightmareShadow4Exploit/p3";
const folder = "Json";
const apiUrl = `https://api.github.com/repos/${repo}/contents/${folder}`;

// Base URL for images
const imageBaseUrl = "https://raw.githubusercontent.com/NightmareShadow4Exploit/p3/main/";

// Fetch JSON files from the GitHub repository
async function fetchJsonFiles() {
    const response = await fetch(apiUrl, {
        headers: {
            'Authorization': `token ${token}`
        }
    });
    const data = await response.json();
    return data.filter(file => file.name.endsWith(".json"));
}

async function displayJsonFiles() {
    const jsonFiles = await fetchJsonFiles();
    const container = document.getElementById("jsonFilesContainer");

    jsonFiles.forEach(file => {
        const fileElement = document.createElement("div");
        fileElement.classList.add("json-file");

        const title = document.createElement("h3");
        title.innerText = file.name;
        fileElement.appendChild(title);

        // Add file element to container
        container.appendChild(fileElement);

        // Fetch the JSON file to display specific dropdowns
        fetch(file.download_url)
            .then(response => response.json())
            .then(jsonData => {
                if (jsonData.dropdowns) {
                    // Create dropdown container that will be shown on hover
                    const dropdownContainer = document.createElement("div");
                    dropdownContainer.classList.add("dropdown-container");

                    const dropdownList = document.createElement("ul");
                    dropdownList.classList.add("dropdown-list");

                    jsonData.dropdowns.forEach(option => {
                        const listItem = document.createElement("li");
                        listItem.innerText = option;

                        listItem.addEventListener('click', () => {
                            filterBySubcategory(option, jsonData.metadata);
                        });

                        dropdownList.appendChild(listItem);
                    });

                    dropdownContainer.appendChild(dropdownList);
                    fileElement.appendChild(dropdownContainer);
                }
            });
    });
}

// Filter metadata based on the selected subcategory
function filterBySubcategory(subcategory, metadata) {
    const filteredItems = metadata.filter(item => item.subcategory === subcategory);
    displayMetadata(filteredItems);
}

// Display filtered metadata items
function displayMetadata(metadata) {
    const contentContainer = document.getElementById("contentContainer");
    contentContainer.innerHTML = ''; // Clear previous content

    metadata.forEach(item => {
        const itemElement = document.createElement("div");
        itemElement.classList.add("metadata-item");

        // Construct image URL based on the image path
        const imageUrl = `${imageBaseUrl}${item.imagePath}`;

        const image = document.createElement("img");
        image.src = imageUrl;
        image.alt = item.title;

        // Add event listener to image for fetching respective data
        image.addEventListener('click', () => {
            // Here, you can fetch more specific data related to this image, if needed
            displaySpecificData(item);
        });

        const textContainer = document.createElement("div");

        const title = document.createElement("h4");
        title.innerText = item.title;

        const description = document.createElement("p");
        description.innerText = item.description;

        textContainer.appendChild(title);
        textContainer.appendChild(description);

        itemElement.appendChild(image);
        itemElement.appendChild(textContainer);

        contentContainer.appendChild(itemElement);
    });
}

// Display more specific data for a clicked image (if needed)
function displaySpecificData(item) {
    console.log("Fetching specific data for: ", item);
    // You can fetch and display more detailed information based on the 'item' object here.
}

// Initialize by displaying the JSON files
displayJsonFiles();
